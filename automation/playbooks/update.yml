- name: Update WLMOJ Repositories
  hosts: all  # Target all hosts in your inventory
  become: yes # Use privilege escalation (e.g., sudo)
  gather_facts: true
  tasks:
    - name: Update each WLMOJ repository
      environment:
        GIT_TERMINAL_PROMPT: 0
      ansible.builtin.git:
        repo: 'https://github.com/mcpt/wlmoj.git'
        dest: "/site/"
        update: yes
        force: true
        recursive: true
      register: repo_clone
      failed_when:
        - repo_clone.failed
        - not 'Local modifications exist in repository' in repo_clone.msg

    - name: Trigger Discord webhook on successful updates
      community.general.discord:
        webhook_id: 1265698136480022741
        webhook_token: "6UGB0mwC1LJ51csq9UqLjX38wz-vYxnFZ1_nFK1nwzZG3OkLElpRBTmf-NinhpTpvmY8"
        content: '-# WLMOJ repositories updated successfully on **{{ ansible_hostname }}**. [[View Commit @ {{repo_clone.after|truncate(8, False, "", 0)}}]](<https://github.com/mcpt/wlmoj/commit/{{ repo_clone.after }}>)'
      when: repo_clone.before != repo_clone.after

    - name: Remove outdated docker artifacts
      ansible.builtin.include_tasks: "tasks/cleanup.yml"

#    - name: Update docker stack
#      docker_stack:
#        state: present
#        name: wlmoj
#        compose:
#          - /home/judge/docker/dmoj/docker-stack.yml
#      when: ansible_hostname == "general"

    - name: Update packages
      apt:
        upgrade: dist
        update_cache: yes

    # Restart required?
    - name: check if reboot is needed
      stat:
        path: /var/run/reboot-required
      register: check_reboot
      changed_when: check_reboot.stat.exists
    - meta: end_host
      when: not check_reboot.stat.exists

    - name: reboot system
      reboot:
        msg: "Reboot initiated by Ansible due to system updates"
        pre_reboot_delay: 3600
        post_reboot_delay: 300
        reboot_timeout: 5400

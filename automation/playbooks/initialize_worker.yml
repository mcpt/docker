- hosts: workers
  become: yes
  become_user: root
  become_method: sudo

  vars:
    # permissions on windows with wsl is not fun
    ansible_ssh_private_key_file: ~/.ssh/id_ed25519
    ansible_python_interpreter: /usr/bin/python3

    docker_edition: 'ce'
    docker_package_state: present
    docker_install_compose: true


  roles:
    - role: hifis.unattended_upgrades
  tasks:
    - name: 'APT Upgrade'
      apt:
        upgrade: true
        update_cache: true

    - name: 'Install nfs'
      apt:
        pkg:
          - nfs-common

    - name: 'Installing docker'
      run_once: true
      include_role:
        name: geerlingguy.docker

    - name: 'Change timezone to Toronto time'
      run_once: true
      shell: timedatectl set-timezone America/Toronto

    - name: 'Get Swarm join token from manager'
      run_once: true
      shell: 'docker swarm join-token worker'
      register: join_token
      delegate_to: "{{ groups['managers'] | random }}"  # Run on the first manager node

    - name: 'Join the Swarm as a worker'
      run_once: true
      community.docker.docker_swarm:
        state: join
        join_token: "{{ join_token.stdout_lines[0] }}"
        advertise_addr: "{{ groups['managers'][0] }}"  # Use Docker factP

    - name: 'Mount nfs share'
      run_once: true
      ansible.posix.mount:
        path: /var/share
        src: 10.137.0.5:/var/share
        state: mounted
        fstype: nfs4
        opts: 'auto,nofail,noatime,nolock,intr,tcp,actimeo=1800'

    - name: 'Install UFW'
      run_once: true
      apt:
        name: ufw

    - name: "UFW: allow ssh"
      run_once: true
      ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: 'UFW: internal network'
      run_once: true
      ufw:
        rule: allow
        src: '10.137.0.0/16'
        dest: '10.137.0.0/16'

    - name: 'UFW: enable and by default drop'
      ufw:
        state: enabled
        policy: deny

    - name: 'Disable password for root'
      shell: passwd -d root
      run_once: true

    - name: 'Reboot server'
      reboot:
        reboot_timeout: 0
